# Don't require GNU-standard files (Changelog, README, etc.)
AUTOMAKE_OPTIONS = foreign

# Need to be explicit about these for old versions of automake
OLD_AM_GENERATED_HDRS = include/mesquite_config.h \
                        include/mesquite_version.h 

EXTRA_DIST = 	$(OLD_AM_GENERATED_HDRS:=.in) \
							include/mesquite_config.win.h

BUILT_SOURCES = include/Mesquite_all_headers.hpp msqcppflags.make
MSQ_SRCS=
MSQ_HDRS=
MSQ_INCLUDES =
lib_LTLIBRARIES = libmesquite.la
libmesquite_la_DEPENDENCIES=
# Tell libtool that there are no undefined symbols when linking 
# the library.  This means that either the symbol is defined in
# the library or we include a -lname argument to specify which 
# other library provides the symbol.  Libtool requires this 
# guarantee to generate libraries on platforms for which shared
# libs cannot have any unmet depenendencies (windows, and maybe AIX)
libmesquite_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined

include make.inc

libmesquite_la_includedir = $(includedir)
libmesquite_la_nodist_includedir = $(includedir)

libmesquite_la_SOURCES = $(MSQ_SRCS) 

libmesquite_la_include_HEADERS = include/Mesquite.hpp \
                                 include/MeshInterface.hpp \
                                 include/ParallelMeshInterface.hpp \
                                 include/ParallelHelperInterface.hpp \
                                 include/CurveDomain.hpp \
                                 $(MSQ_HDRS)

# don't put these generated headers into the distribution
nodist_libmesquite_la_include_HEADERS = include/Mesquite_all_headers.hpp \
                                        include/mesquite_config.h \
                                        include/mesquite_version.h 

libmesquite_la_LIBADD = $(MESQUITE_LIBS)
AM_CPPFLAGS += -I$(top_srcdir)/src/mesquite/include \
               -I$(top_builddir)/src/mesquite/include  \
               $(MSQ_INCLUDES) \
               -I$(top_srcdir)/itaps \
               -I$(top_srcdir)/itaps/imesh \
               -I$(top_builddir)/itaps/imesh \
               -I$(top_srcdir)/itaps/fbigeom \
               -I$(top_srcdir)/itaps/irel

include/Mesquite_all_headers.hpp: $(MSQ_HDRS)
	@echo "Generating $@..."
	@echo '/* NOTE: This file is generated by make.' > $@
	@echo ' *       Do not manually edit it.'       >> $@
	@echo ' */'                                     >> $@
	@echo '#ifndef MESQUITE_ALL_HEADERS_HPP'        >> $@
	@echo '#define MESQUITE_ALL_HEADERS_HPP'        >> $@
	@echo '#include "Mesquite.hpp"'                 >> $@
	@echo '#include "MeshInterface.hpp"'            >> $@ 
	@echo '#include "ParallelMeshInterface.hpp"'    >> $@
	@echo '#include "ParallelHelperInterface.hpp"'  >> $@ 
	@echo '#include "CurveDomain.hpp"'  >> $@ 
	@for file in $(MSQ_HDRS); do \
	   n=`expr X"$$file" : X".*/\([^/]*\)"`;\
	   test -z "$$n" || echo "#include \"$$n\"" >> $@; \
	done
	@echo '#endif'                                  >> $@ 

# Generate list of include flags src/ dir and subdirs 
# for use when compiling stuff outside of the src/ subdir.
# Basically, replace value of $(top_srcdir) with the
# $(top_srcdir) variable in the existing list of include flags.
msqcppflags.make: $(MSQ_HDRS) Makefile.am $(top_builddir)/config.status
	@echo "Generating $@..."
	@echo "#MSQ_INCLUDES = $(MSQ_INCLUDES)" > $@
	@echo "INCLUDES = -I\$$(top_srcdir)/src/mesquite/include \\" >> $@
	@for flag in $(MSQ_INCLUDES); do \
	  n=`expr X"$$flag" : X"-I$(top_srcdir)/\(.*\)" || true`; \
	  if test "x$$n" != "x"; then \
	    echo "	-I\$$(top_srcdir)/$$n \\"     >> $@ ; \
	  fi ; \
	done
	@echo "	-I\$$(top_builddir)/src/mesquite/include \\"                >> $@ 
	@echo "	-I\$$(top_srcdir)/src \\"                        >> $@ 
	@echo "	-I\$$(top_srcdir)/itaps \\"                        >> $@ 
	@echo "	-I\$$(top_builddir)/itaps \\"                      >> $@
	@echo "	-I\$$(top_srcdir)/test \\"                      >> $@
	@echo "	\$$(IBASE_INCL)"                                   >> $@

MOSTLYCLEANFILES = $(BUILT_SOURCES)
DISTCLEANFILES = msqcppflags.make $(OLD_AM_GENERATED_HDRS)

